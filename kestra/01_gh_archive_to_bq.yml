id: 01_gh_archive_to_bq
namespace: prod

inputs:
  - id: branch
    type: SELECT
    displayName: Select the branch of the project to run
    values: ['main','develop']
    defaults: 'develop'
    allowCustomValue: true
  - id: start_hour
    type: SELECT
    displayName: Select the start hour to extract
    values: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23']
    defaults: '0'
    allowCustomValue: true
  - id: end_hour
    type: SELECT
    displayName: Select the final hour to extract
    values: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23']
    defaults: '0'
    allowCustomValue: true

variables:
  date: "{{ trigger.date ?? execution.startDate | dateAdd(-1, 'DAYS') }}"
  file_date: "{{ trigger.date ?? execution.startDate | dateAdd(-1, 'DAYS') | date(format='yyyy-MM-dd')}}"
  file_hours: "{{ '{' }}{{inputs.start_hour}}..{{inputs.end_hour}}{{ '}' }}"
  file_extension: ".json"

tasks:
  - id: set_label
    type: io.kestra.plugin.core.execution.Labels
    labels:
      environment: "{{ inputs.branch }}"
      file_date: "{{ render(vars.file_date) }}"
      file_hours: "{{ render(vars.file_hours) }}"

  # - id: working_directory
  #   type: io.kestra.plugin.core.flow.WorkingDirectory
  #   tasks:
  - id: clone_repo
    type: io.kestra.plugin.git.Clone
    url: "{{ envs.github_url }}"
    branch: "{{inputs.branch}}"

  - id: start_etl
    type: io.kestra.plugin.core.log.Log
    message: "Executing extraction for date {{ render(vars.date) }} with files from: {{ render(vars.file_date )}}."
  
  - id: extract_files
    type: io.kestra.plugin.scripts.shell.Commands
    outputFiles:
      - "*.json"
    taskRunner:
      type: io.kestra.plugin.core.runner.Process
    # -q makes the execution quiet while -O- outputs the contents to stdout instead of a file, so we can pipe it to gunzip.
    # gunzip > file.gz takes the piped data into the file
    # note: in this case, the range function is inclusive on both ends
    commands:
      - |
        {% for i in range(inputs.start_hour, inputs.end_hour) %}
          wget -qO- "https://data.gharchive.org/{{ render(vars.file_date) }}-{{ i }}.json.gz" | gunzip > {{ render(vars.file_date) }}-{{ i }}.json
        {% endfor %}

  - id: inspect_files
    type: io.kestra.plugin.scripts.shell.Commands
    taskRunner: 
      type: io.kestra.plugin.core.runner.Process
    inputFiles: '{{ outputs["extract_files"]["outputFiles"] }}'
    outputFiles:
      - "*.txt"
    commands:
      # - ls | grep .json > downloaded_files.txt
      - ls | grep .json

  # - id: process-files
  #   type: io.kestra.plugin.core.flow.ForEach
  #   values: "{{ outputs.inspect_files.outputFiles['downloaded_files.txt'] }}"
  #   tasks:
  #     - id: process-file
  #       type: io.kestra.plugin.core.log.Log
  #       message: "{{taskrun.value}}"

      # - id: process_events
      #   type: io.kestra.plugin.scripts.python.Commands
      #   commands:
      #     - python kestra/process_gh_archive_events.py --input_file=

  - id: purge_files
    type: io.kestra.plugin.core.storage.PurgeCurrentExecutionFiles
    description: To avoid cluttering, we will remove the downloaded files. Although mostly they should be in the temporary working directory.

triggers:
  - id: hourly_schedule
    type: io.kestra.plugin.core.trigger.Schedule
    cron: "0 9 * * *"
    disabled: false